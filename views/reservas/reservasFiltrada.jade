extends ../layout

block content
	main.noticias
		section.fotoTopo.row
		section.divNoticias.reservas
			.faixa
				h1 Lista Reservas
			.container
				.row
					form.form-group.col-md-10.pull-right(action='/reservas/reservasFiltrada' method='POST')
						input.barraDePesquisa.pull-right.col-md-3.control-label(type='date', name='data')
						button.lupazinha.pull-right
							img(src='/img/home/lupaPesquisa.png' width='100%')
				
			.container
				.row.listaRegras
					each lista, i in listaReservas
						.bloco.col-md-3
							if (moment(lista.data).format('DD') < moment(dataAtual).format('DD') && moment(lista.data).format('MMM') <= moment(dataAtual).format('MMM'))
								.data.expirado
									p #{moment(lista.data).format('DD')}
									p #{moment(lista.data).format('MMM')}
								.conteudo
									.titulo.expirado
										h2 Reserva Encerrada
									.texto
										- var modalidade = lista.modalidade
											if (modalidade == "Salão de Festa")
												p reservado por #{lista.nomeUser}.
											else 
												p reservado por #{lista.nomeUser} das #{lista.horaInicio} até #{lista.horaTermino} horas.
								a(href='#' data-toggle='modal', data-target='#reserva')
									button.btn Escolha outro horário
							else 
								.data
									p #{moment(lista.data).format('DD')}
									p #{moment(lista.data).format('MMM')}
								.conteudo
									.titulo
										h2 #{lista.modalidade}
									.texto
										- var modalidade = lista.modalidade
											if (modalidade == "Salão de Festa")
												p reservado por #{lista.nomeUser}.
											else 
												p reservado por #{lista.nomeUser} das #{lista.horaInicio} até #{lista.horaTermino} horas.
								a(href='#' data-toggle='modal', data-target='#reserva')
									button.btn Escolha outro horário


					.row.btnReservar
						- var usuario = user.tipoConta
						if (usuario == 'administrador' || "portaria")
							a(href='/reservas/listaReservas')
								button.btn.btn-gran.btn-primary
									p Lista de Reservas
						a(data-toggle='modal', data-target='#reserva' href='#')
							button.btn.btn-gran.btn-primary
								p Reservar
						.modal.fade(role='dialog', id='reserva')
							.modal-dialog.modal-md
								// Modal content
								.modal-content
									.modal-header
										button.close(type='button', data-dismiss='modal') ×
										h4.modal-title Reservar
									.modal-body
										form.form-horizontal(method='post' action="/reservas/reservaHorario", entype='multipart/form-data')
											.form-group
												input(type='hidden' name='idUser' value='#{user._id}')
												input(type='hidden' name='nomeUser' value='#{user.nome}')
												label.col-md-3.control-label(for='inputData') Modalidade
												.col-md-12
													legent(id='Piscina') Piscina
														input#inputModalidade(type='radio', name='modalidade', value='Piscina' required)
													legent(id='Piscina') Salão de Festa
														input#inputModalidade(type='radio', name='modalidade', value='Salão de Festa' required)
													legent(id='Piscina') Quadra Society
														input#inputModalidade(type='radio', name='modalidade', value='Quadra Society' required)

											.form-group
												label.col-md-3.control-label(for='inputData') Data
												.col-md-8
													input#inputData.form-control(type='date', name='data', required)

											.form-group
												label.col-md-3.control-label(for='inputData') Hora Inicio
												.col-md-8
													input#inputHora.form-control(type='time', name='horaInicio', required)

											.form-group
												label.col-md-3.control-label(for='inputData') Hora Termino
												.col-md-8
													input#inputHora.form-control(type='time', name='horaTermino', required)
											br
											br

											button.btn.btn-default.cancelarModal(type='button', data-dismiss='modal') Cancelar
											button.btn.btn-primary.confirmaModal(type='submit') Reservar
		.container
			.row
				a.btn.btn-sm.btn-gran.voltar.pull-right(href="#", onclick='goBack()') 
					i.fa.fa-reply &nbsp Voltar
		script(src='//ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js')		
		script(src='/jquery/mask.min.js')

		//- 	.form-group
		//- 										div.depedentes
		//- 											label(class='labelFormCadastrar col-md-3') Convidados
		//- 											input(type='text', name='numeroParticipantes', class='col-md-7 telefone nomeParticipante', id='numeroDedependente' placeholder='Quantos membros de fora participaram?', value='', required)
		//- 											br
		//- 											br
		//- 											br
		//- 											.field_wrapper
		//- 												div
		//- 													a.add_button.col-md-3.addButton(href='javascript:void(0);', title='Add field')
		//- 														img(src='/img/home/buttonMais.png')
		//- 													input(type='text', name='nomeParticipante', class='col-md-7 telefone nomeParticipante', id='numeroDedependente' placeholder='Nome do Participante', required)
		//- script.
		//- 	$(document).ready(function(){
		//- 		var maxField = 100; //Input fields increment limitation
		//- 		var addButton = $('.add_button'); //Add button selector
		//- 		var wrapper = $('.field_wrapper'); //Input field wrapper
		//- 		var fieldHTML = '<div><a href="javascript:void(0);" class="addButton remove_button col-md-3" title="Remove field"><img src="/img/home/buttonMenos.png" /></a><input type="text" name="nomeParticipante" class="col-md-7 telefone nomeParticipante" placeholder="Nome do Dependente" /></div>'; //New input field html 
		//- 		var x = 1; //Initial field counter is 1
		//- 		$(addButton).click(function(){ //Once add button is clicked
		//- 			if(x < maxField){ //Check maximum number of input fields
		//- 				x++; //Increment field counter
		//- 				$(wrapper).append(fieldHTML); // Add field html
		//- 			}
		//- 		});
		//- 		$(wrapper).on('click', '.remove_button', function(e){ //Once remove button is clicked
		//- 			e.preventDefault();
		//- 			$(this).parent('div').remove(); //Remove field html
		//- 			x--; //Decrement field counter
		//- 		});
		//- 	});